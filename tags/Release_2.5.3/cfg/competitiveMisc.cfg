// ----------------------------------------------------------------------
//
// Competitive Miscelaneous
//
//   -- file for all miscelaneous scripts/aliases
//
//      Contains:
//       -- +score - calls the scoreboard, enables net_graph, calls timeleft
//       -- developer_on - echos go to top left of the screen for limited time
//       -- ForwardSpawn - press a button to respawn in a forward spawn
//       -- Remove Ragdolls - (cvars) removes ragdolls from the game
//
// ======================================================================

// ----------------
// Scoreboard call
//  -- calls the scoreboard, enables net_graph, calls timeleft
// ================
alias "+score" "+showscores; timeleft; net_graph_on"
alias "-score" "-showscores; net_graph_selection"

// ---------------
// Developer call
//  -- echos go to top left of the screen for limited time
// ===============
alias developer_on "developer 1; wait 500; developer 0"

// ------------
// ForwardSpawn
//   -- press a button to respawn in a forward spawn
// ============
alias class_demoman "join_class demoman"
alias class_engineer "join_class engineer"
alias class_heavyweapons "join_class heavyweapons"
alias class_medic "join_class medic"
alias class_pyro "join_class pyro"
alias class_scout "join_class scout"
alias class_sniper "join_class sniper"
alias class_soldier "join_class soldier"
alias class_spy "join_class spy"
 
// this is the class we want to end up as after we cycle spawns
// its the class we are when we execute the cycle_spawn command
alias current_class ""

// when a class config is executed this is called
// we use this to ensure that we execute 2 class configs
// (the intermediate class and the final class)
alias cycle_on_class_changed ""

// begin repeated attempts to change class
// terminate when class changes successfully
alias cycle_final_class "alias cycle_on_class_changed cycle_terminate; alias cycle_do_loop cycle_loop; cycle_do_loop"

// the command which will repeat until we sucessfully change class
alias cycle_loop "current_class; wait 25; cycle_do_loop"

// stop repeating cycle_loop
// do nothing on_class_changed
alias cycle_terminate "alias cycle_do_loop; alias cycle_on_class_changed"

// change to a random class, loop until cycle_on_class_changed is executed
alias cycle_random_class "alias cycle_on_class_changed cycle_random_terminate; alias cycle_do_loop cycle_random_loop; cycle_do_loop"

// the command which will repeat until we sucessfully change class
alias cycle_random_loop "join_class random; wait 25; cycle_do_loop"

// stop repeating cycle_random_loop
alias cycle_random_terminate "alias cycle_do_loop; cycle_final_class"

// the command we execute to cycle spawns
alias cycle_spawn "update_current_class; cycle_random_class"

// ----------------
// Remove Ragdolls
//   -- removes ragdolls from the game
// ================
ragdoll_sleepaftertime "10" 
cl_ragdoll_collide "0" 
cl_ragdoll_physics_enable "1" 
cl_ragdoll_fade_time "0.0F" 
g_ragdoll_fadespeed "0.0f" 
g_ragdoll_important_maxcount "10" 
g_ragdoll_lvfadespeed "10" 
g_ragdoll_maxcount "10" 